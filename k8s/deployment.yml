apiVersion: v1
kind: Namespace
metadata:
  name: dev
  labels:
    name: dev
---
apiVersion: v1
kind: Service
metadata:
  namespace: dev
  name: game-config-service
  labels:
    app: game-config-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  selector:
    app: game-config-service
    tier: web
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1 
kind: Ingress
metadata:
  namespace: dev
  name: game-config-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: dev-digital-dice
spec:
  rules:
    - host: api.dev.digitaldicegame.com
      http:
        paths:
          - path: /game-cs
            pathType: Prefix
            backend:
              service:
                name: game-config-service
                port:
                  number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: dev
  name: game-config-service
  labels:
    app: game-config-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-config-service
  template:
    metadata:
      labels:
        app: game-config-service
    spec:
      containers:
      - name: game-config-service
        image: europe-central2-docker.pkg.dev/striking-arbor-382117/digital-dice/game-config-service:IMAGE_TAG
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
        env:
        - name: ENVIRONMENT
          value: "dev"
        - name: DB_HOST
          value: "postgresql-postgresql-ha-pgpool"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-postgresql-ha-postgresql
              key: password
        - name: DB_NAME
          value: gamedb
        - name: REDIS_HOST
          value: "kubernetes.docker.internal"
        - name: REDIS_PORT
          value: "6379"
        livenessProbe:
          httpGet:
           path: /health
           port: 8000
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
           path: /health
           port: 8000
           scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 2
          periodSeconds: 10
          failureThreshold: 3
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 512Mi